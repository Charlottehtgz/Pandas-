#以下内容半复制黏贴链接中的代码自学
#版权声明：本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。本文链接：https://blog.csdn.net/cxmscb/article/details/54632492
#没有格式没有完整的注释
#每一小节需要分开来运行（注释掉或删除其他小节）

import numpy
import pandas #这一块可能跟据小节不同，需要做调整
from pandas import Series,DataFrame

# 1.数据结构Series

x=Series([1,2,3,4])
print(x)
print(x.values)
print(x.index)


y = Series([1, 2, 3, 4], index = ['a', 'b', 'd', 'c'])
print(y)
print(y.index) # Index([u'a', u'b', u'd', u'c'], dtype='object')
print(y['a']) # 通过行索引来取得元素值：1
y['d'] = 6 # 通过行索引来赋值
print(y[['c', 'a', 'd']])# 类似于numpy的花式索引
print(y[y > 2])  # 类似于numpy的布尔索引
print('b' in y) # 类似于字典的使用：是否存在该索引：True
print('e' in y) # False


data = {'a':1, 'b':2, 'd':3, 'c':4}
z = Series(data)
print(z)
extend_index = ['a', 'b', 'c', 'e']
z_1= Series(data, index=extend_index)
print(z_1)
print(z+z_1)
z.name="Letters and numbers"
z.index.name="letter"
print(z)
z.index=['f', 'g', 'h', 'e']
print(z)

#2. DataFrame

data = {'state': ['ok', 'ok', 'good', 'bad'],
        'year': [2000, 2001, 2002, 2003],
        'pop': [3.7, 3.6, 2.4, 0.9]}
print(DataFrame(data))

print(DataFrame(data, columns=['year', 'state', 'pop', 'debt']))

x = DataFrame(data,
              columns=['year', 'state', 'pop', 'debt'],
              index=['one', 'two', 'three', 'four'])
print(x)
print(x['state'])
print(x.state)  # 可直接用.进行列索引

x['debt'] = 16.5
print(x)

x.debt = numpy.arange(4)  # 用numpy数组修改元素
print(x)

val = Series([5,6,7,8],index=['one', 'two', 'five','six']) #用Series修改元素，没有指定的默认数据用NaN
x.debt=val
print(x)

x['gain'] = (x.debt > 0)  # 如果debt大于0为True
print(x)

print(x.columns)

print(x.T)
